<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ABYAAAAAAAAAAAAAADEAAACWAAAAAAAAAAwAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMYAAABrAAAAqQAA
        AGcAAACuAAAAgwAAAAAAAAAAAAAAFgAAAEQAAAAWAAAAEgAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAI8AAAAAAAAAAAAAAAAAAAAAAAAAzAAA
        AEQAAACpAAAAZwAAAIcAAACTAAAAAAAAAAAAAAAAAAAAAAAAAJ4AAABgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAB+AAAAdAAAAIkAAAAAAAAAAAAA
        AAAAAADMAAAARAAAAKkAAABnAAAANQAAAO8AAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAH4AAAB0AAAAiQAA
        AAAAAAAAAAAAAAAAAMwAAABEAAAAqQAAAGcAAAA1AAAA7gAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAA
        AI8AAAAAAAAAAAAAAAAAAAAAAAAAzAAAAEQAAACpAAAAZwAAAEcAAADwAAAAOAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAARAAAAKkAAABnAAAAJAAAAOoAAABfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAABEAAAAIgAAABUAAACFAAAAnwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAABuAAAA7QAAAM0AAAC7AAAAuwAA
        AN8AAADQAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAtgAAAMQAAABjAAAAVQAA
        AFUAAABVAAAAVQAAAHEAAADkAAAAcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAADcAAAABwAA
        AFcAAACXAAAAmQAAAJkAAACSAAAAMwAAACoAAAD1AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcQAA
        AJ8AAAAzAAAA7AAAAHsAAAB3AAAAdwAAAI0AAADqAAAAAwAAAOMAAAAuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB3AAAAmQAAAFUAAADbAAAAdwAAAHcAAAB3AAAAdwAAAP8AAAARAAAA3QAAADMAAAAAAAAAAAAA
        AJkAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAvwAA
        AAAAAAAAAAAAAAAAAHcAAACZAAAAIAAAAJcAAACZAAAAmQAAAJkAAACZAAAAjAAAAAIAAADdAAAAMwAA
        AAAAAACeAAAAZgAAAIIAAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASQAA
        ABgAAAAbAAAAOAAAACIAAAAAAAAAdwAAAJkAAAALAAAAUwAAAFUAAABVAAAAVQAAAFUAAABHAAAAAAAA
        AN0AAAAzAAAAAAAAABYAAACKAAAAcwAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACjAAAAJQAAAAAAAAB8AAAASwAAAAAAAAB3AAAAmQAAAFMAAADtAAAAuwAAALsAAAC7AAAAuwAA
        AP8AAAAPAAAA3QAAADMAAAAAAAAAAAAAAB4AAAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAxAAAAlgAAAAAAAAAAAAAAAAAAAHYAAACaAAAARwAAANoAAAA2AAAAMwAA
        ADMAAABIAAAA+gAAAAcAAADeAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAABEAAAAAAAAAAAAAAAAAAAAUwAAAMQAAAAEAAAAmwAA
        ANsAAADdAAAA3QAAANYAAABoAAAAEAAAAPgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAA3QAA
        AIUAAAAeAAAAEQAAABEAAAARAAAAEQAAACwAAAC4AAAAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAhAAAAsgAAAPEAAAD/AAAA/wAAAP8AAAD/AAAA5QAAAJAAAAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAH4AAAA+cz//HnM/wA5zOAAOczgADnM/4QZzPgAGAAgADgAA////4
        n5///w+f//4GT//+Bg//ngef/w4D//8OA///ngP///4D///+B///+AP///AB///wAP//8AD///AAz/5w
        AIf8EASH/JAAz/5wAP/+cAD///AB///4Af97InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>